#! /bin/bash

############################################################################################
# File   : bootstrap
# Author : Sebastien VARRETTE <Sebastien.Varrette@uni.lu>
#          (Web page : http://varrette.gforge.uni.lu)
# Creation date : 21 Jul 2009
# Time-stamp: <Wed 2010-09-29 21:56 svarrette>
#
# $Id: bootstrap 1 2009-07-21 14:18:56Z svarrette $
#
# Description : see the print_help function or launch 'bootstrap.sh --help'
#  
# This program is free software; you can redistribute it and/or modify it under the terms 
# of the GNU General Public License as published by the Free Software Foundation; either 
# version 2 of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
# See the GNU General Public License for more details.
# You should have received a copy of the GNU General Public License along with this 
# program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, 
# Fifth Floor, Boston, MA  02110-1301, USA.
# 
# Sebastien Varrette <Sebastien.Varrette@uni.lu> 
# University of Luxembourg 
# 6, rue Richard Coudenhove-Kalergi
# L-1359 Luxembourg, LUXEMBOURG
############################################################################################

### Global variables
VERSION=0.2
COMMAND=`basename $0`
VERBOSE=""
DEBUG=""
SIMULATION=""

### displayed colors
COLOR_GREEN="\033[0;32m"
COLOR_RED="\033[0;31m"
COLOR_YELLOW="\033[0;33m"
COLOR_VIOLET="\033[0;35m"
COLOR_CYAN="\033[0;36m"
COLOR_BOLD="\033[1m"
COLOR_BACK="\033[0m"

### Local variables
# Execution Mode 
CLEAN_MODE=""   # clean all generated files 
DO_ALL_MODE=""  # In addition to rebuilding the autotools, run configure && make
CSCOPE_MODE=""  # Initialise the cscope process

# Commands
#AUTOHEADER="autoheader"
ACLOCAL="aclocal -I config/m4"
AUTOCONF="autoconf -I."
AUTOMAKE="automake --add-missing --copy"
AUTORECONF="autoreconf --install --force"

# files
BACKUP_FILES=`find . -name *~`
OBJ_FILES=`find . -name *.o`
MAKEFILES_IN=`find . -name Makefile.in`
AUTOM4TE_CACHE_DIR=autom4te.cache

AUTOHEADER_FILES="config.h config.h.in"
ACLOCAL_FILES="aclocal.m4"
AUTOCONF_FILES="configure"
AUTOMAKE_FILES="INSTALL stamp-h1 config/config.sub config/ltmain.sh config/missing config/mkinstalldirs config/install-sh config/config.guess config/config.sub config/missing config/depcomp ${MAKEFILES_IN}"

#######################
### print functions ###
#######################

####
# print version of this program
##
print_version() {
    cat <<EOF
This is $COMMAND version "$VERSION".
Copyright (c) 2009 Sebastien VARRETTE  (http://varrette.gforge.uni.lu)
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
EOF
}

####
# print help
##
print_help() {
cat <<EOF
NAME
	$COMMAND -- initiate an autotools project to generate the configure script. 

SYNOPSIS
	$COMMAND [-V | -h]	
	$COMMAND [-v] [--clean|-a] [-n]	

DESCRIPTION
	$COMMAND 

OPTIONS
        -a | --do-all
                Also complete the installation by running ./configure && make
        -c --clean
                Clean the current directory with generated files
	--debug
		Debug mode. Causes $COMMAND to print debugging messages.
	-h --help
		Display a help screen and quit.
	-n --dry-run
		Simulation mode. 
	-v --verbose
		Verbose mode. 
	-V --version
		Display the version number then quit. 

AUTHOR
	Sebastien VARRETTE <Sebastien.Varrette@uni.lu>
	Web page: http://varrette.gforge.uni.lu 

REPORTING BUGS 
	Please report bugs to <Sebastien.Varrette@uni.lu>

COPYRIGHT
	This is free software; see the source for copying conditions.  There is NO
	warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
       
SEE ALSO	
	Other scripts are available on my web site http://varrette.gforge.uni.lu
EOF
}

######
# Print information in the following form: '[$2] $1' ($2=INFO if not submitted)
# usage: info text [title]
##
info() {
    [ -z "$1" ] && print_error_and_exit "[$FUNCNAME] missing text argument"
    local text=$1
    local title=$2
    # add default title if not submitted but don't print anything 
    [ -n "$text" ] && text="${title:==>} $text"    
    echo -e $text
}
debug()   { [ -n "$DEBUG"   ] && info "$1" "[${COLOR_YELLOW}DEBUG${COLOR_BACK}]"; }
verbose() { [ -n "$VERBOSE" ] && info "$1"; }
error()   { info "$1" "[${COLOR_RED}ERROR${COLOR_BACK}]"; }
warning() { info "$1" "[${COLOR_VIOLET}WARNING${COLOR_BACK}]"; }
print_error_and_exit() {
    local text=$1
    [ -z "$1" ] && text=" Bad format"
    error  "$text. '$COMMAND -h' for help."
    exit 1
}
#####
# print the strings [ OK ] or [ FAILED ] or [ FAILED ]\n$1
##
print_ok()     { echo -e "[   ${COLOR_GREEN}OK${COLOR_BACK}   ]"; }
print_failed() { echo -e "[ ${COLOR_RED}FAILED${COLOR_BACK} ]"; }
print_failed_and_exit() { 
    print_failed
    [ ! -z "$1" ] && echo "$1"
    exit 1
}

#########################
### toolbox functions ###
#########################

#####
# execute a local command 
# usage: execute command
###
execute() {
    [ $# -eq 0 ] && print_error_and_exit "[$FUNCNAME] missing command argument"
    debug "[$FUNCNAME] $*"
    [ -n "${SIMULATION}" ] && echo "(simulation) $*" || eval $*
    local exit_status=$?
    debug "[$FUNCNAME] exit status: $exit_status"
    return $exit_status
}

####
# ask to continue. exit 1 if the answer is no
# usage: really_continue text
##
really_continue() {
    echo -e -n "[${COLOR_VIOLET}WARNING${COLOR_BACK}] $1 Are you sure you want to continue? [Y|n] "
    read ans
    case $ans in 
	n*|N*) exit 1;;
    esac
}

#####
# Check availability of binaries passed as arguments on the current system
# usage: check_bin prog1 prog2 ...
##
check_bin() {
    [ $# -eq 0 ] && print_error_and_exit "[$FUNCNAME] missing argument"
    for appl in $*; do
	[ -n "$VERBOSE" ] && echo -n -e "=> checking availability of the command '$appl' on your system \t"
	local tmp=`which $appl`
	[ -z "$tmp" ] && print_failed_and_exit "Please install $appl or check \$PATH."
	[ -n "$tmp" ] && [ -n "$VERBOSE" ] && print_ok
    done
}

##########################
### Specific functions ###
##########################
####
# clean the generated files
##
clean() {
    # check if a Makefile is present or not 
    if  [ -f "Makefile" ]; then
	info "found a Makefile in the current directory"
	info "running 'make clean && make distclean'"
	execute "make clean"
	execute "make distclean"
    fi

    # remove autom4te.cache directopry if it exists
    if [ -d "${AUTOM4TE_CACHE_DIR}" -a -n "${AUTOM4TE_CACHE_DIR}/" ]; then
	info "removing ${AUTOM4TE_CACHE_DIR}/ directory"
	execute "rm -r ${AUTOM4TE_CACHE_DIR}"
    fi

    info "remove object files"     && execute "rm -f ${OBJ_FILES}"
    info "remove backup files"     && execute "rm -f ${BACKUP_FILES}"
    info "remove autoheader files" && execute "rm -f ${AUTOHEADER_FILES}"
    info "remove aclocal files"    && execute "rm -f ${ACLOCAL_FILES}"
    info "remove autoconf files"   && execute "rm -f ${AUTOCONF_FILES}"
    info "remove automake files"   && execute "rm -f ${AUTOMAKE_FILES}"
}

extract_perl_modules() {
    grep "^use " bin/backup.in | cut -d ' ' -f 2 | sed -e "s/;$//" | sort | uniq
}


################################################################################
################################################################################
#[ $UID -gt 0 ] && print_error_and_exit "You must be root to execute this script (current uid: $UID)"

# Check for required argument
#[ $# -eq 0 ] && print_error_and_exit

# Check for options
while [ $# -ge 1 ]; do
    case $1 in
        -e | --extract-perl-modules) extract_perl_modules; exit 0;;
	-h | --help)    print_help;        exit 0;;
	-V | --version) print_version;     exit 0;;
	--debug)        DEBUG="--debug"; 
	                VERBOSE="--verbose";; 	   
 	-n | --dry-run) SIMULATION="--dry-run";;
	-v | --verbose) VERBOSE="--verbose";; 	    
# ---------------------------------------
	-c | --clean)   CLEAN_MODE="1";;
	-a | --do-all)  DO_ALL_MODE="1";;
	-c | --clean)   CLEAN_MODE="1";;
    esac
    shift
done

if [ -n "${CLEAN_MODE}" ]; then 
    clean
    exit 0
fi
check_bin autoheader aclocal autoconf automake autoreconf
info "running autoreconf to generate the configure script and initiate autotools"
execute "${AUTORECONF}"
if [ -n "${DO_ALL_MODE}" ]; then
    debug "do_all mode"
    execute "./configure && make"
fi


